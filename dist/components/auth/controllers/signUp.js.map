{"version":3,"file":"signUp.js","sourceRoot":"src/","sources":["components/auth/controllers/signUp.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,oDAGgC;AAEhC,sDAAyD;AACzD,oEAA+D;AAE/D,SAAe,MAAM,CAAC,GAAa,EAAE,GAAa;;QAChD,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAC5C,GAAG,CAAC,IAAI,CAAC;QAEX,MAAM,IAAA,sBAAY,EAAC,GAAS,EAAE;YAC5B,IAAI,IAAI,CAAC;YAET,IAAI,GAAG,MAAM,iBAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YACzD,IAAI,IAAI;gBACN,IAAA,yBAAc,EAAC,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;YAEtE,MAAM,cAAc,GAAG,MAAM,IAAA,sBAAY,EAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,GAAG,MAAM,iBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC9B,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE;aAC/D,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,QAAQ,CAAC;YACrB,OAAO,IAAA,yBAAc,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;QACpE,CAAC,CAAA,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CAAA;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import { Response } from \"express\";\nimport z from \"zod\";\n\nimport { IRequest } from \"../../../utils/types\";\nimport {\n  asyncWrapper,\n  hashPassword,\n} from \"../../../utils/helpers\";\nimport { signUpSchema } from \"../auth.validation\";\nimport { handleResponse } from \"../../../utils/response\";\nimport { prisma } from \"../../../configs/persistence/database\";\n\nasync function signUp(req: IRequest, res: Response) {\n  const { firstName, lastName, email, password }: z.infer<typeof signUpSchema> =\n    req.body;\n\n  await asyncWrapper(async () => {\n    let user;\n\n    user = await prisma.user.findFirst({ where: { email } });\n    if (user)\n      handleResponse({ res, status: 400, message: \"user already exist\" });\n\n    const hashedPassword = await hashPassword(password);\n    user = await prisma.user.create({\n      data: { firstName, lastName, email, password: hashedPassword },\n    });\n\n    delete user.password;\n    return handleResponse({ res, data: user, message: \"successful\" });\n  }, res);\n}\n\nexport default signUp;\n"]}