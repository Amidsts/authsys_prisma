{"version":3,"file":"createProduct.js","sourceRoot":"src/","sources":["components/products/controllers/createProduct.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,oDAAsD;AACtD,sDAAyD;AACzD,oEAA+D;AAG/D,SAAe,aAAa,CAAC,GAAa,EAAE,GAAa;;QACvD,MAAM,EACJ,IAAI,EACJ,WAAW,EACX,KAAK,EACL,eAAe,EACf,GAAG,GACJ,GAAwC,GAAG,CAAC,IAAI,CAAC;QAElD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;QACrB,MAAM,IAAA,sBAAY,EAAC,GAAS,EAAE;YAC5B,IAAI,OAAO,CAAC;YAEZ,OAAO,GAAG,MAAM,iBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;YACnE,IAAI,OAAO;gBACT,IAAA,yBAAc,EAAC,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;YAEzE,OAAO,GAAG,MAAM,iBAAM,CAAC,OAAO,CAAC,MAAM,CAAC;gBACpC,IAAI,EAAE;oBACJ,IAAI;oBACJ,WAAW;oBACX,KAAK;oBACL,eAAe;oBACf,GAAG;oBACH,MAAM,EAAE,IAAI,CAAC,EAAE;iBAChB;aACF,CAAC,CAAC;YAEH,OAAO,IAAA,yBAAc,EAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;QACvE,CAAC,CAAA,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CAAA;AAED,kBAAe,aAAa,CAAC","sourcesContent":["import { Response } from \"express\";\nimport z from \"zod\";\n\nimport { IRequest } from \"../../../utils/types\";\nimport { asyncWrapper } from \"../../../utils/helpers\";\nimport { handleResponse } from \"../../../utils/response\";\nimport { prisma } from \"../../../configs/persistence/database\";\nimport { createProductSchema } from \"../product.validations\";\n\nasync function createProduct(req: IRequest, res: Response) {\n  const {\n    name,\n    description,\n    price,\n    quantityInStock,\n    sku,\n  }: z.infer<typeof createProductSchema> = req.body;\n\n  const { user } = req;\n  await asyncWrapper(async () => {\n    let product;\n\n    product = await prisma.product.findFirst({ where: { sku, name } });\n    if (product)\n      handleResponse({ res, status: 400, message: \"product already exist\" });\n\n    product = await prisma.product.create({\n      data: {\n        name,\n        description,\n        price,\n        quantityInStock,\n        sku,\n        userId: user.id,\n      },\n    });\n\n    return handleResponse({ res, data: product, message: \"successful\" });\n  }, res);\n}\n\nexport default createProduct;\n"]}